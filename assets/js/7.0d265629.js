(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{208:function(e,n,a){"use strict";a.r(n);var t=a(0),l=Object(t.a)({},(function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"模块化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块化","aria-hidden":"true"}},[e._v("#")]),e._v(" 模块化")]),e._v(" "),a("p",[e._v("命名空间 ---\x3e COMMONJS ---\x3e AMD/CMD/UMD ---\x3e ES6 module")]),e._v(" "),a("p",[e._v("命名空间：库名.类别名.方法名     ---\x3eYUI")]),e._v(" "),a("p",[e._v("CommonJS：Midules/1.1.1，一个文件为要给模块，通过 module.exports 暴露模块接口，通过 require 引入模块，同步执行         ---\x3ecommonjs")]),e._v(" "),a("p",[e._v("AMD（Async Module Definition）：使用 define 定义模块，使用 require 加载模块，依赖牵制，提前执行   ---\x3erequireJS")]),e._v(" "),a("p",[e._v("CMD（Common Module Definition）：一个文件为一个模块，使用 define 来定义一个模块，使用 require 来加载一个模块，尽可能懒执行 ---\x3eSeaJS")]),e._v(" "),a("p",[e._v("UMD（Universal Module Definition）：通用解决方案，三个步骤，判断是否支持 AMD ，判断是否支持 CommonJS ，如果都没有则使用全局变量")]),e._v(" "),a("p",[e._v("ESM（EcmaScript Module）：一个文件一个模块，import 引入，export 暴露")]),e._v(" "),a("p",[e._v("webpack支持：AMD（RequireJS）、ES Modules、CommonJS\nwebpack3以后开始支持 es6 语法，不再需要 Babel 插件了")]),e._v(" "),a("p",[e._v("CSS模块化---\x3eCSS设计模式\nOOCSS  结构和设计的分离，容器和内容的分离，主导可获得不同地方使用的类\nSMACSS 可扩展和模块化结构，目标是减少代码量，减少代码的维护，可规划为五个部分：Base + Layout + Module + State + Theme\nAtomic CSS 原子的CSS，编写视觉功能小，单用途的CSS\nMCSS（multilayer css） 多层级的CSS，底层foundation---\x3e基本base---\x3e项目project---\x3e装束cosmetic\nAMCSS 针对属性设计CSS\nBEM 基于Block、Element、Modifier\nCSS Modules")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("webpack 的核心\nEntry   \nOutput\nLoaders 处理文件，转化为模块\nPlugins\n\nwebpack -h 查看命令\nwebpack -v 查看版本\nwebpack <entry>[<entry>]<output> 打包\nwebpack --config webpack.conf.dev.js 指定配置文件\n")])])]),a("p",[e._v("脚手架\nwebpack-cli\nvue-cli\nangular-cli\nreact-starter")]),e._v(" "),a("p",[e._v("eg.打包JS")]),e._v(" "),a("p",[e._v("编译ES6\nBabel-\nnpm install babel-loader@8.0.0-beta.0 @babel/core\nnpm install -save-dev babel-loader babel-core")]),e._v(" "),a("p",[e._v("Babel Presets\nnpm install @babel/preset-env -save-dev\nnpm install babel-preset-env -save-dev")]),e._v(" "),a("p",[e._v('Babel Polyfill 全局垫片，为应用准备\nnpm install babel-polyfill -save\nimport "babel-polyfill"')]),e._v(" "),a("p",[e._v("Babel Runtime Transform 局部垫片，为开发框架准备\nnpm install babel-plugin-transform-runtime -save-dev\nnpm install babel-runtime -save\n使用 .babelrc 文件配置")]),e._v(" "),a("p",[e._v("编译 TypeScript\nJS 的超集 typescriptlang.org/tslang.cn\ntypescript-loader\nnpm i typescript ts-loader --save-dev\nnpm i typescript awesome-typescript-loader --save-dev\n使用需要\ntsconfig.json\nwebpack.config.js")]),e._v(" "),a("p",[e._v("配置选项参考 官网/docs/handbook/compiler-options.html\n常用选项\ncompilerOptions\ninclude\nexclude")]),e._v(" "),a("p",[e._v("声明文件 用来做语法提示 eg. Typings、lodash")]),e._v(" "),a("p",[e._v("P11 webpack的使用")])])}),[],!1,null,null,null);n.default=l.exports}}]);